# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd # v7.0.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      AIDBOX_URL: http://localhost:8081
      AIDBOX_CLIENT_ID: test
      AIDBOX_CLIENT_SECRET: test
      TF_ACC: "1"
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.5.*'
          - '1.6.*'
          - '1.7.*'
          - '1.8.*'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Start services
        run: |
          cd test/fixtures/aidbox
          docker compose up -d
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - name: Wait for services
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do sleep 1; done
          until curl -s http://localhost:8081/health; do sleep 1; done
      - name: Verify seed file
        run: |
          # Check if seed file exists in container
          if ! docker exec aidbox ls /aidbox-project.edn > /dev/null; then
            echo "Seed file not found in container"
            exit 1
          fi
          # Check if seed file has expected content
          if ! docker exec aidbox grep -q "test-client" /aidbox-project.edn; then
            echo "Seed file does not contain expected content"
            exit 1
          fi
          echo "Seed file verified successfully"
      - name: Run acceptance tests
        id: acceptance_tests
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
        continue-on-error: true

      # Collect Docker logs if tests fail
      - name: Collect Docker logs
        if: steps.acceptance_tests.outcome == 'failure'
        run: |
          cd test/fixtures/aidbox
          echo "=== Docker Compose Logs ===" > docker_logs.txt
          docker-compose logs >> docker_logs.txt
          echo "=== Docker Container Status ===" >> docker_logs.txt
          docker-compose ps >> docker_logs.txt
          echo "=== Docker Container Health ===" >> docker_logs.txt
          docker-compose ps -a >> docker_logs.txt

      # Upload Docker logs as artifact
      - name: Upload Docker logs
        if: steps.acceptance_tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs-${{ matrix.terraform }}
          path: test/fixtures/aidbox/docker_logs.txt
          retention-days: 5

      # Stop services
      - name: Stop services
        if: always()
        run: |
          cd test/fixtures/aidbox
          docker compose down -v

      # Fail the workflow if tests failed
      - name: Check test results
        if: steps.acceptance_tests.outcome == 'failure'
        run: exit 1
