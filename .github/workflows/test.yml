# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd # v7.0.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      aidboxdb:
        image: healthsamurai/aidboxdb:17.0
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aidbox
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      aidbox:
        image: healthsamurai/aidboxone:latest
        env:
          AIDBOX_LICENSE: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvZmZsaW5lIjpmYWxzZSwiY3JlYXRvciI6eyJpZCI6ImY2NGE1ZDFlLWM3MTYtNGJjYy05YWVjLTIyZWYyYzJkYzRjMyIsInJlc291cmNlVHlwZSI6IlVzZXIifSwia2V5Ijoib25saW5lLTIwMjIwNTI0LTE0MzY0NyIsIm5hbWUiOiJsb2wiLCJleHBpcmF0aW9uIjoiMjEyNC0wNC0wMVQwODo0NDowOS44NDdaIiwidHlwZSI6ImRldmVsb3BtZW50IiwiY3JlYXRlZCI6IjIwMjUtMDQtMjVUMDg6NDQ6MDkuODQ3WiIsIm1heC1pbnN0YW5jZXMiOjIsIm1heC1kYi1zaXplIjo1MzY4NzA5MTIwLCJwcm9kdWN0IjoiYWlkYm94IiwicHJvamVjdCI6eyJpZCI6ImYwNjllNjgxLTFjMWYtNDI4NS1iOTRkLWUwOTdjNzNhNTA2OCIsInJlc291cmNlVHlwZSI6IlByb2plY3QifSwic3RhdHVzIjoiYWN0aXZlIiwiaWQiOiIwZTM0Y2M5ZS0xZGFiLTQzZTctOTVhOC1iNjMzMjU2NDU1NGEiLCJpbmZvIjp7ImdvYWwiOiJkZXZlbG9wbWVudCIsImhvc3RpbmciOiJzZWxmLWhvc3RlZCJ9LCJpc3N1ZXIiOiJodHRwczovL2FpZGJveC5hcHAifQ.JKFJFj7c0_2dgzcZ58BtB9tyRsmyN8S9ijyaByqsTvBMRNhIQZbJUgAPF4ciGtoxCqiOAtvv_uPs2nR4Isu357jQqiOaSJ1TFdox5WFtv8epkDON16ddVIfI1B-Wo0mSnQIyLsYYVyPLQzcaCzQKXbTp9TkJuz6FBdJcWo5USn8
          AIDBOX_CLIENT_ID: test
          AIDBOX_CLIENT_SECRET: test
          AIDBOX_PORT: 8081
          AIDBOX_FHIR_VERSION: 4.0.1
          BOX_PROJECT_VERSION: 1
          PGHOST: aidboxdb
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: aidbox
        options: >-
          --health-cmd "curl -f http://localhost:8081/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8081:8081
    env:
      AIDBOX_URL: http://localhost:8081
      AIDBOX_CLIENT_ID: test
      AIDBOX_CLIENT_SECRET: test
      TF_ACC: "1"
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.5.*'
          - '1.6.*'
          - '1.7.*'
          - '1.8.*'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Wait for DB & Aidbox
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do sleep 1; done
          until curl -s http://localhost:8081/health; do sleep 1; done
      - name: Copy aidbox-project.edn
        run: |
          mkdir -p test/fixtures/aidbox
          cp test/fixtures/aidbox/aidbox-project.edn test/fixtures/aidbox/
      - name: Load DB seeds
        run: psql postgresql://postgres:postgres@localhost:5432/aidbox -f test/fixtures/aidbox/seeds.sql
      - name: Run acceptance tests
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
